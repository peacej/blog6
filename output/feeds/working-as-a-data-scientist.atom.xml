<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jerry Chi's website - Working as a data scientist</title><link href="https://jerrychi.com/" rel="alternate"></link><link href="https://jerrychi.com/feeds/working-as-a-data-scientist.atom.xml" rel="self"></link><id>https://jerrychi.com/</id><updated>2019-09-26T00:00:00+09:00</updated><subtitle>Jerry Chi&lt;BR&gt;Data Scientist in Tokyo</subtitle><entry><title>"Guide To Working With Me A Data Science Manager"</title><link href="https://jerrychi.com/guide-to-working-with-me-a-data-science-manager.html" rel="alternate"></link><published>2019-09-26T00:00:00+09:00</published><updated>2019-09-26T00:00:00+09:00</updated><author><name>Jerry Chi</name></author><id>tag:jerrychi.com,2019-09-26:/guide-to-working-with-me-a-data-science-manager.html</id><summary type="html">&lt;p&gt;·9 min read&lt;/p&gt;
&lt;p&gt;This document is mainly for sharing with my colleagues and anyone I might work with in the future. But hey, I might as well post it on Medium; maybe someone will find it useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Below are principles, values, and best practices I tell myself to follow&lt;/strong&gt; (both …&lt;/p&gt;</summary><content type="html">&lt;p&gt;·9 min read&lt;/p&gt;
&lt;p&gt;This document is mainly for sharing with my colleagues and anyone I might work with in the future. But hey, I might as well post it on Medium; maybe someone will find it useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Below are principles, values, and best practices I tell myself to follow&lt;/strong&gt; (both for working at organizations and working in data science). You don’t need to believe all the same principles, but &lt;strong&gt;if you read them you’ll understand how I think, and that may help us cooperate effectively.&lt;/strong&gt; I’ll try to understand how you think too, and we can work out our differences :)&lt;/p&gt;
&lt;h1&gt;Principles / best practices for work&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Almost nothing is absolute&lt;/strong&gt; (including all the below principles). When applying any belief or principle, one should consider exceptions and/or consider moderation/balance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Always be open to change.&lt;/strong&gt; The world and situations change quickly, and so people should change too. That could include changing my below principles.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Focus and prioritize&lt;/strong&gt;. If one is working on 5 major projects at the same time, that’s probably too many to be very effective. Clear &lt;strong&gt;deprioritization&lt;/strong&gt; is a necessary part of good prioritization. In some cases, consider implementing ruthless prioritization (say no — politely, of course — to important projects/people because you have even more important work).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be a driving force.&lt;/strong&gt; Drive projects and tasks forward and achieve progress in the face of uncertainty/ambiguity. Related concepts are leadership, proactiveness, and taking ownership. But be careful of fatigue or spreading yourself too thin while driving many projects (hence the need for focus).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be free.&lt;/strong&gt; We are all adults. We should be able to live and work the way we want to. This includes our work hours, the technical tools or Python/R libraries we want to use, etc. However, someone else should step in when someone is abusing their freedom and not producing good work as a result. Also, there are some cases where limiting freedom (by establishing a standardized, scalable approach) can lead to greater organizational effectiveness, so there’s a tradeoff to consider. But in general, I like to err towards the side of more freedom and creating soft guidelines instead of hard rules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be open and transparent&lt;/strong&gt; (except if it could cause major issues… e.g. legal issues)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be open-minded.&lt;/strong&gt; Most  people tend to become less accepting of conflicting approaches/ideas as they gain experience/expertise (and many are not self-aware that they’ve become less open-minded). Don’t let this happen to you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep people motivated,&lt;/strong&gt; including yourself and the people working with you. If people are not motivated, they probably won’t do good work or they’ll eventually leave the team or company. Take time to think about what motivates you and others (including career goals), and push for change if there’s a motivation problem. There are many reasons for low motivation; you should try to do something about it ASAP if possible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don’t micromanage. Err on the side of over-empowering others.&lt;/strong&gt; It’s tricky to decide how much responsibility/authority/independence to &lt;strong&gt;delegate&lt;/strong&gt; to someone. &lt;strong&gt;The best leaders delegate well&lt;/strong&gt;. I think in most cases it’s better to give too much than too little; empowering people leads to higher motivation, faster work progress, faster personal growth, better long-term results, better team dynamics, and warm fuzzy feelings. Most mistakes can be fixed/dealt with. Of course there are exceptions (don’t let the new intern perform heart surgery all by herself) and it depends somewhat on each individual’s preferences. My thinking is influenced by the &lt;a href="https://www.nbforum.com/nbreport/ilkka-paananen-the-least-powerful-ceo/"&gt;culture of my previous employer, Supercell&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://schoolofherring.com/2015/07/19/ilkka-paananen-of-supercell-celebrate-learnings-from-failures/"&gt;&lt;strong&gt;Celebrate failure&lt;/strong&gt;&lt;/a&gt;. It helps encourage continued risk-taking. But don’t &lt;a href="https://www.entrepreneur.com/article/247933"&gt;fetishize failure&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don’t only focus on the short term&lt;/strong&gt;. Sure, there might be quarterly goals, and those are important, but most great accomplishments in human history took more than a quarter to achieve. Consider blocking time each week for a longer-term goal.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Principles for good communication&lt;/h1&gt;
&lt;p&gt;Most communication / interpersonal problems could be avoided if everyone did just the first two below things well.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Stand in the shoes of your audience.&lt;/strong&gt; Before hitting “send” on the e-mail, stop for a minute and think: is everything easily understandable (with sufficient context, explanation of terms, summarization of key points, etc.) for the reader given their limited knowledge? Is it clear to the reader what the next step s/he should take as a result of the e-mail? How would the reader feel after reading? This doesn’t just apply to e-mails or Slack messages. E.g. naming your dashboard is also a form of communication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manage expectations.&lt;/strong&gt; All the time, people end up being disappointed/frustrated or lose trust due to misaligned expectations. Most of this is preventable. Ask yourself regularly: are expectations aligned? E.g. is there a difference between your understanding of the expected timing/quality/importance/amount of your work output and a stakeholder’s understanding? If the result will be highly uncertain (as is the case for e.g. using a new machine learning model for the first time), take extra care to ensure people understand that uncertainty and don’t have unfairly high expectations. This is not just about making people happy; it often hurts a team’s effectiveness if someone is deciding a course of action based on unrealistic expectations of a colleague’s work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Err on the side of over-communication.&lt;/strong&gt; If you’re not sure if something is worth saying/communicating, it’s better to say it just in case. The potential damage from under-communication (loss of trust, major bug, etc.) is typically far greater.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Proactively give both positive and negative (critical) feedback.&lt;/strong&gt; No one is perfect, no one is completely self-aware, and no one can optimize their work perfectly just by themselves. The most effective teams have members that help each other become better team members over time.&lt;br&gt;
&lt;strong&gt;Giving critical feedback:&lt;/strong&gt; keep the message clear (don’t overly sugar-coat it) while not sounding like an asshole. Provide justification and explanation about how to improve (e.g. don’t just say “your presentation sucked”).&lt;br&gt;
&lt;strong&gt;Receiving critical feedback:&lt;/strong&gt; some people suck at giving feedback. Try not to take it personally and try to turn it into something helpful. Try to give feedback on how they can give you feedback more effectively. Be very welcoming of any critical feedback and proactively invite people to give it to you.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Principles / best practices for data science and technical work&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Good technical work usually requires good communication.&lt;/strong&gt; Some people see coding etc. as a hard skill and communication as a soft skill, and some people pride themselves mainly on their hard skills. But if your code is hard to read or if your technical work is hard to follow/understand, I don’t consider that good work, especially in the context of an organization. Making your work reasonably easy to read/understand requires good communication skills.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Think carefully about the tradeoff between work speed and technical debt.&lt;/strong&gt; Sometimes it makes sense to just make a quick and dirty hacky prototype, sometimes it doesn’t. Adjust based on the situation (e.g. ask yourself questions like: will this eventually be used in production? How many people will be reading/using this code, for what purpose?)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Identify and make the obviously good tradeoffs first.&lt;/strong&gt; For example, take the time to design well the folder/file structure and naming conventions for a big project. This might only take 1% of the total project time and reduce the technical debt burden by 20%. It’s surprising how many people fail to make such tradeoffs. Reflect regularly about if you’re making the right tradeoffs. Get feedback from others about it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“&lt;/strong&gt;&lt;a href="https://en.wikiquote.org/wiki/Donald_Knuth"&gt;&lt;strong&gt;Premature optimization is the root of all evil&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.”&lt;/strong&gt; True… and insufficient or overly late optimization is bad as well. One needs to think about when and how much optimization is appropriate. E.g. one rule of thumb is the &lt;a href="https://en.wikipedia.org/wiki/Rule_of_three_(computer_programming)"&gt;Rule of Three&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Work should be reproducible and understandable.&lt;/strong&gt; If you did a piece of analysis or created an ML model, someone else with sufficient technical chops should be able to come and reproduce what you did with little to no guidance from you. Otherwise, 2 problems will get worse: technical debt and over-dependency on specific individuals.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Almost all code should be pushed to git&lt;/strong&gt; (or another code version control system). There are tons of benefits: reproducibility, accountability, reversibility, searchability, education of team members, etc. Exceptions might be very short, temporary scripts. If it’s too troublesome for you to push your code to git, you need to set things up so that it’s easier to do so (e.g. bash script to reduce the amount of typing when pushing to git, set up auto-sync from your Jupyter server to git, etc.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Have a culture of knowledge sharing,&lt;/strong&gt; especially on technical topics. Internal/external blog posts, tech talks, tutorials, recommendations for tools to use, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Appreciate the balance between data-driven and non-data-driven methods.&lt;/strong&gt; Sometimes, companies just have to take a risk and act on gut feel . Otherwise, certain risky/innovative things will never be attempted. Often, human decision-making is a combination of data and gut feel or qualitative info, and some of the best software is a combination of ML (based on training data) and rule-based heuristics (based on human expertise).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand on the shoulders of giants&lt;/strong&gt;. No need to develop something from scratch when you can reuse something off of github.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Set up your technical environment to for efficient work&lt;/strong&gt;. Sometimes I can find the exact line of code I’m looking for in 5 seconds. Set up &lt;a href="https://winaero.com/blog/add-custom-chrome-searches-for-address-bar-to-save-your-time/"&gt;Chrome search aliases&lt;/a&gt; for github, google docs, or whatever else you use commonly. Allow efficient use of your command line using bash aliases, &lt;a href="https://ohmyz.sh/"&gt;oh-my-zsh&lt;/a&gt;, etc. Enable &lt;a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/codefolding/readme.html"&gt;code-folding in Jupyter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Block off a bit of time for innovative, cutting-edge (and hopefully fun) data science experimentation.&lt;/strong&gt; For example, check out a new paper or new Python library and see how it can be applied to problems you’re trying to solve. A common problem in organizations is that, due to time constraints and short-term goals, people are stuck with using the same old approaches/tools repeatedly (which they can implement quickly with relatively high certainty about the results). Data science / ML is a rapidly progressing field, and you will eventually be left behind or get bored if you don’t take time to try new things.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Jerry’s personality and quirks&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Once I took a personality test and the automatically generated test result was that I’m a &lt;strong&gt;“&lt;/strong&gt;bull in a china shop”. I hope it’s an overstatement..&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I speak my mind&lt;/strong&gt;, sometimes bluntly. If I think something should be changed for the greater good, I may bang the table (figuratively) and argue aggressively about why it should be changed, regardless of the seniority of the people involved. Feel free to tell me to shut up (but please justify why you think I should). I think over time I’ve become more diplomatic, but this is still part of my fundamental personality.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I have grit&lt;/strong&gt;. I can deal with huge setbacks/failures, huge problems, huge challenges, etc. But I won’t sacrifice my health dealing with such problems (I did before and it’s not worth it).&lt;/li&gt;
&lt;li&gt;I have little tolerance for bullshit. Sometimes I’ll fight it patiently if I have to. (Of course, one should take care to not prematurely conclude that something is bullshit.)&lt;/li&gt;
&lt;li&gt;I don’t get embarrassed easily. Some might describe this as &lt;a href="https://www.youtube.com/watch?v=8PxEFti645A"&gt;being shameless&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I’m addicted to self-improvement and learning. Let me know if you have tips :) I still have a long way to go.&lt;/li&gt;
&lt;li&gt;I try to think more about how to do things for the mid/long-term benefit of the organization/ecosystem, not the short-term benefit of any given individual or team. If I’m not doing this, please let me know.&lt;/li&gt;
&lt;li&gt;I like &lt;strong&gt;sharing news articles, reports&lt;/strong&gt;, papers, github repos, etc. that I think might be helpful or interesting. Let me know if it’s too much or too distracting. Don’t let it hurt your ability to focus.&lt;/li&gt;
&lt;li&gt;I’m a big fan of &lt;strong&gt;Finnish values&lt;/strong&gt; (having worked in Finland for a year). Many Finnish people are humble, blunt, straightforward, concise, and have grit.&lt;/li&gt;
&lt;li&gt;I’m like the &lt;strong&gt;grammar police&lt;/strong&gt;. I will point out people’s incorrect grammar/spelling/wording, (in any language that I speak). I do it to help people improve themselves and to facilitate better communication. But if this becomes too annoying, please let me know.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Logistical stuff&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Go ahead and put things in my calendar or reschedule stuff as needed. No need to ask me in advance. My calendar is up to date.&lt;/li&gt;
&lt;li&gt;I may block off a chunk of “focused work time” on my calendar if I feel like I’m being distracted too much.&lt;/li&gt;
&lt;li&gt;Feel free to grab extra time with me if the regular 1-on-1 or team meeting is insufficient.&lt;/li&gt;
&lt;li&gt;Weekly team meetings — I think people should speak up only if one has something to say that others should hear; no need to feel pressured to always give an update on your work. Also, I usually don’t like overly structuring meetings with inflexible agendas, but we can add more structure if needed.&lt;/li&gt;
&lt;li&gt;Feel free to slack/e-mail me at any time on any day. However, I may stop checking slack/e-mail when trying to disconnect from work (on weekends etc.) in which case the best way to reach me for an emergency is via phone or Facebook Messenger.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Relevant posts by me&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@peacej2/how-to-be-an-awesome-data-science-manager-1c63b059a03c"&gt;How to be an awesome data science manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@peacej2/how-to-be-an-awesome-data-scientist-930f04760f7e"&gt;How to be an awesome data scientist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This guide was partially inspired by the &lt;a href="http://growth.eladgil.com/book/the-role-of-the-ceo/insights-working-with-claire/"&gt;Guide to Working with Claire&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="todo add alt text" src="https://miro.medium.com/max/2000/0*H13cLJi5Z5CThoew.jpg"&gt;Typical picture of me working with a colleague&lt;/p&gt;</content><category term="Working as a data scientist"></category><category term="data science"></category><category term="communication"></category><category term="teamwork"></category></entry><entry><title>"How To Be An Awesome Data Science Manager"</title><link href="https://jerrychi.com/how-to-be-an-awesome-data-science-manager.html" rel="alternate"></link><published>2019-03-21T00:00:00+09:00</published><updated>2019-03-21T00:00:00+09:00</updated><author><name>Jerry Chi</name></author><id>tag:jerrychi.com,2019-03-21:/how-to-be-an-awesome-data-science-manager.html</id><summary type="html">&lt;p&gt;9 min read&lt;/p&gt;
&lt;p&gt;This is a relatively new type of job, and many organizations and people are still in the midst of figuring out what makes a great data science manager.&lt;/p&gt;
&lt;p&gt;What does it even mean to be “awesome” in this context? Well, if your team members…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;…are highly motivated …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;9 min read&lt;/p&gt;
&lt;p&gt;This is a relatively new type of job, and many organizations and people are still in the midst of figuring out what makes a great data science manager.&lt;/p&gt;
&lt;p&gt;What does it even mean to be “awesome” in this context? Well, if your team members…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;…are highly motivated&lt;/li&gt;
&lt;li&gt;…are growing quickly&lt;/li&gt;
&lt;li&gt;…have great impact on your organization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;then you are probably an awesome data science manager.&lt;/p&gt;
&lt;p&gt;Here’s my two cents on how to be awesome:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Be an &lt;a href="https://medium.com/@peacej2/how-to-be-an-awesome-data-scientist-930f04760f7e"&gt;awesome data scientist&lt;/a&gt; yourself&lt;/li&gt;
&lt;li&gt;Enable and empower your team members&lt;/li&gt;
&lt;li&gt;Don’t just prioritize; show them how to prioritize&lt;/li&gt;
&lt;li&gt;Value their future careers&lt;/li&gt;
&lt;li&gt;Maximize synergies with other teams&lt;/li&gt;
&lt;li&gt;Hire more awesome data talent&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;1 Be an awesome data scientist yourself&lt;/h1&gt;
&lt;p&gt;========================================&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://medium.com/@peacej2/how-to-be-an-awesome-data-scientist-930f04760f7e"&gt;my last post on this topic&lt;/a&gt;. It helps a lot if you can provide ideas and advice on deciding between analytical approaches, improving code quality, choosing which frameworks/tools to use for a machine learning project, etc. You need to stay up to speed on data science skills and knowledge by being hands-on at least part of the time, even if you manage a lot of people.&lt;/p&gt;
&lt;p&gt;If you know that you’re an awesome data scientist, &lt;strong&gt;be both humble and confident&lt;/strong&gt; about it. Be humble because there is still so much room to improve and learn. But you should also radiate confidence so that your team members will naturally want to learn from you, and so that other teams will take your team seriously.&lt;/p&gt;
&lt;h1&gt;2 Enable and empower your team members&lt;/h1&gt;
&lt;p&gt;=======================================&lt;/p&gt;
&lt;p&gt;At one of the management culture spectrum, you have the “slave driver” managers, figuratively whipping their team members forced to do specific tasks. At the other end, you have managers focused on &lt;strong&gt;empowering their team members with the freedom and ability to make big decisions and do big things&lt;/strong&gt;. (An extreme example of this is &lt;a href="https://www.gamesindustry.biz/articles/2018-05-04-supercell-meet-the-worlds-least-powerful-ceo"&gt;Supercell&lt;/a&gt;, a past employer of mine.)&lt;/p&gt;
&lt;p&gt;This doesn’t mean you simply throw people into the deep end of the pool and walk away. Rather, you should step in to offer help or guidance as needed. The appropriate frequency of such help will probably differ by team member, given their abilities/experience and the task at hand.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enablement:&lt;/strong&gt; give them the tools, data, and help that they need and get obstacles out of their way.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;someone need to get internal approval to access a dataset? B̵a̵n̵g̵ ̵t̵h̵e̵ ̵t̵a̵b̵l̵e̵ proactively explain to the approver to get it approved quickly&lt;/li&gt;
&lt;li&gt;someone wants to get a second monitor? a paid license for RStudio? company doesn’t want to pay for it?B̵a̵n̵g̵ ̵t̵h̵e̵ ̵t̵a̵b̵l̵e̵ ̵h̵a̵r̵d̵e̵r̵ ̵a̵n̵d̵ ̵r̵i̵o̵t̵ actively lobby your company for these basic benefits to increase productivity&lt;/li&gt;
&lt;li&gt;someone struggling with building a data pipeline by him/herself? You could provide some tips yourself or connect the struggling person to someone from another team (e.g. data engineering team) who has more expertise in such pipelines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Empowerment:&lt;/strong&gt; give and trust them with the authority, independence, freedom, and abilities that they need to kick ass.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow them to &lt;strong&gt;take full ownership&lt;/strong&gt; on some projects or areas of work. Trust them by default; i.e. trust that they will do a good job without micromanagement. For less experienced team members, you can start with smaller projects first to minimize the risk. If you found that you over-trusted someone (and they screwed up), forgive them and help them about a bit more frequently the next time. I believe that in most cases, the risk/damage from under-trusting people is in general much greater than the risk/damage from over-trusting people. Assuming you’re working with good people, they’ll do their best to step up to challenges that you entrust them with, and they’ll feel motivated and grow quickly while doing so.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Give them freedom.&lt;/strong&gt; People are the most motivated when they are free to choose what to do; I think this is especially true for data science. Of course, you can’t just let them spend all their time iterating on convolutional neural networks for classifying hot dogs vs. non-hot dogs… you also need to think about your team’s impact on the company, so you need to be constantly solving the dual-objective optimization problem of allowing people to freely choose the work they want to do with while maximizing the impact of that work on the company. Taking the time to explain to your team members regarding the interestingness and importance of certain projects to the company can help you reach a higher global optimum.&lt;/li&gt;
&lt;li&gt;Help them &lt;strong&gt;gain abilities and skill up&lt;/strong&gt; in ways that allow them to do bigger things at your company. This could be a full separate essay, I’ll skip the details for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;3 Don’t just prioritize; show team members how to prioritize&lt;/h1&gt;
&lt;p&gt;=============================================================&lt;/p&gt;
&lt;p&gt;Prioritization for data scientists can be complex and difficult. In fact it’s even sometimes a meta-problem; since often the output of data science work could be advice on whether or not to prioritize a product feature, you might need to think about prioritizing the work on understanding priority…&lt;/p&gt;
&lt;p&gt;Typically, you’ll be in a better position to prioritize things at a high level than your team members (given that you have more experience, you’re more in sync with company executives and their goals, you have more broad understanding of the various current and future projects, etc.). But that doesn’t mean you should just decide the task priorities and assign them to your team members.&lt;/p&gt;
&lt;p&gt;In addition to deciding the priorities, try to &lt;strong&gt;ensure deep understanding amongst your team of &lt;em&gt;why&lt;/em&gt; a given task has a certain level of importance and potential impact&lt;/strong&gt;. The benefits of doing this are threefold:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Team members will likely &lt;strong&gt;become better at triaging by themselves&lt;/strong&gt; further subtasks or new requests (e.g. dashboard creation request) of a project; this is especially useful if they are working on multiple projects simultaneously&lt;/li&gt;
&lt;li&gt;They’ll naturally &lt;strong&gt;gain better prioritization skills over time&lt;/strong&gt; (which is good for many things including the possibility of future promotion to be a data science manager)&lt;/li&gt;
&lt;li&gt;They’ll likely &lt;strong&gt;feel more motivated&lt;/strong&gt; about doing the work (even if they didn’t exactly choose to do the work)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;4 Value team members’ future careers&lt;/h1&gt;
&lt;p&gt;=====================================&lt;/p&gt;
&lt;p&gt;As an awesome manager, you should care not just about the current performance of your team members… if you really care about them as human beings, you would care about their long-term success and well-being as well. In your position as a manager, you can actually contribute a lot to their future careers.&lt;/p&gt;
&lt;p&gt;Data science career planning is especially tough because the occupation is relatively new, things are changing fast, and your team members might only have short experience as a data scientist.&lt;/p&gt;
&lt;p&gt;Here are things to try:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Set the cultural norm&lt;/strong&gt; that it is OK (but not required) to freely talk about career aspirations, including potentially leaving your team. Even if the person leaves your team, you could still end up working together on cross-team projects, and the person could be leveraging their data science skills in their next role (e.g. as a PM making data-driven product decisions or another type of data role).&lt;/li&gt;
&lt;li&gt;Have periodic &lt;strong&gt;1-on-1 career chats,&lt;/strong&gt; maybe every 3~6 months. Ask probing questions (without being creepy :P ) to make them think more deeply about the kind of work they enjoy and are passionate about.&lt;/li&gt;
&lt;li&gt;Be on the lookout for &lt;strong&gt;chances for them to try out the work&lt;/strong&gt; that they aspire to do in the future. For example, if someone aspires to be a data science manager in the future, you could set her up as the official mentor to the new summer intern, since mentoring is part of the work of a manager. If someone aspires to become an expert on hardcore ML engineering in the future rather than ad hoc analytics, try to arrange for him to get assigned to more ML projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;5 Maximize synergies with other teams&lt;/h1&gt;
&lt;p&gt;======================================&lt;/p&gt;
&lt;p&gt;Data science work is usually not valuable in and of itself. It needs to somehow fit well into a broader product, project, or organization to be truly meaningful. I’ve seen many examples of this not working well; e.g. a great dashboard or machine learning model was made but ends up having no impact. Furthermore, many people are not used to working with data scientists, so achieving smooth teamwork may be difficult.&lt;/p&gt;
&lt;p&gt;Here are some tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In general, &lt;strong&gt;manage and shape expectations&lt;/strong&gt; of what your team can provide and how people should interact with your team. For example, you can tell other teams: “don’t just dump a random analysis request on us without explaining the context. We’ll only agree to do the work if we understand the importance.” You can even make a slide deck to the tune of “this is how the data science team functions and here is the best way to work with us,” then slot in some time to present it. Shaping expectations is also important to prevent demotivation of your team members caused by e.g. unreasonable requests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go with the flow.&lt;/strong&gt; In other words, try to deeply understand the high-level company direction, goals, and priorities, as well as how executives are thinking about them. If you ideate projects in a way that is aligned with those goals, it will be easier to convince other teams to collaborate with your team on those projects. Of course, if you believe the company direction is flawed, you should leverage your mad data skills to change that direction… but that’s another topic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clarify the inter-team dependencies&lt;/strong&gt; for a project to succeed, then talk to those other teams to get their understanding and commitment. Do this &lt;strong&gt;early on&lt;/strong&gt;, i.e. before any major work is started. As a contrived simplified example, let’s say your team member wants to create a customer lifetime value prediction model to help marketers optimize online ad spend. In order for the project to succeed, 1. the data engineering team needs to ensure the data pipeline (for the model’s input data) is stable with a proper SLA and understanding of its importance 2. The marketing team needs to agree to integrate the model output into their daily online ad management workflow somehow. If you can’t get at least some degree of commitment early on, it might be better to give up or postpone the project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;6 Hire more awesome data talent&lt;/h1&gt;
&lt;p&gt;================================&lt;/p&gt;
&lt;p&gt;Most organizations don’t have enough data talent to unlock their maximum potential. Some companies just declare “let’s set a goal to hire 50 AI engineers” and have the flawed expectation that that will automagically lead to awesomeness.&lt;/p&gt;
&lt;p&gt;How can you help your organization? It’s not just about your specific team. Not only does your team have dependencies on other teams (like data engineering), you want to help &lt;strong&gt;drive your whole organization to data greatness&lt;/strong&gt;, right?&lt;/p&gt;
&lt;p&gt;Here are some tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Assess and explain the needs for various types of data roles&lt;/strong&gt; and how they should fit into your organization. Convince your company to either start hiring or increase priority of hiring for some of these roles. It might be initially hard to convince executives, so try to provide concrete examples of the work such people would be doing at your organization specifically. You can refer to how some top tech companies define their data roles (see posts by &lt;a href="https://www.linkedin.com/pulse/one-data-science-job-doesnt-fit-all-elena-grewal/"&gt;AirBnB&lt;/a&gt; and &lt;a href="https://medium.com/indeed-engineering/theres-no-such-thing-as-a-data-scientist-8dae923c14e3"&gt;Indeed&lt;/a&gt;; &lt;a href="https://medium.com/swlh/building-a-world-class-growth-team-25cb508e666d"&gt;post on org structure of growth teams&lt;/a&gt;; &lt;a href="https://www.quora.com/What-does-a-data-product-manager-do"&gt;Quora page about Data Product Managers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;For your data science team specifically, think hard about 1. how to &lt;strong&gt;bridge the gap&lt;/strong&gt; between current/future company needs and your current team and 2. how &lt;strong&gt;team members complement each other,&lt;/strong&gt; then try to prioritize hiring accordingly. For example, if your team is full of people good at software engineering but bad at data visualization/communication, you might want to find someone better at communication, even if he is a bit weaker at coding. In general, it’s very hard to find talent with all desirable traits/skills of a data scientist, so you need to rely on team members complementing each other, both for making the team overall more well-rounded and allowing people to learn from each other and help each other grow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much more can be said about the topic of data talent (including how to attract and evaluate such talent), but maybe that can be a separate post.&lt;/p&gt;
&lt;h1&gt;Closing&lt;/h1&gt;
&lt;p&gt;Being a data science manager is tough and challenging, but it’s a very rewarding job. I hope this post provided some helpful food for thought. I’m still learning myself, so I would appreciate any thoughts/comments/advice below. Thanks~ (^ㅂ^)&lt;/p&gt;
&lt;p&gt;&lt;img alt="todo add alt text" src="https://miro.medium.com/max/20000/1*IddD2FuMkk7fuRqByBiotQ.jpeg"&gt;Obligatory random abstract image&lt;/p&gt;</content><category term="Working as a data scientist"></category><category term="data science"></category><category term="communication"></category></entry><entry><title>How To Be An Awesome Data Scientist</title><link href="https://jerrychi.com/how-to-be-an-awesome-data-scientist.html" rel="alternate"></link><published>2019-02-16T00:00:00+09:00</published><updated>2019-02-16T00:00:00+09:00</updated><author><name>Jerry Chi</name></author><id>tag:jerrychi.com,2019-02-16:/how-to-be-an-awesome-data-scientist.html</id><summary type="html">&lt;p&gt;·7 min read&lt;/p&gt;
&lt;p&gt;The world is teeming with people who have the “data scientist” title but somehow don’t live up to expectations. This problem might be related to the use of the term “fake data scientist,” although I don’t think we should be snobby about academic qualifications etc …&lt;/p&gt;</summary><content type="html">&lt;p&gt;·7 min read&lt;/p&gt;
&lt;p&gt;The world is teeming with people who have the “data scientist” title but somehow don’t live up to expectations. This problem might be related to the use of the term “fake data scientist,” although I don’t think we should be snobby about academic qualifications etc.&lt;/p&gt;
&lt;p&gt;Here is my humble opinion on &lt;strong&gt;how to be an awesome data scientist, regardless of your background&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Always be learning useful things efficiently&lt;/li&gt;
&lt;li&gt;Proactively challenge yourself&lt;/li&gt;
&lt;li&gt;Focus on impact early on&lt;/li&gt;
&lt;li&gt;Have pride in both technical skills and business understanding&lt;/li&gt;
&lt;li&gt;Communication: think hard about how to convey insights and ideas&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Tip #1: Always be learning useful things efficiently&lt;/h1&gt;
&lt;p&gt;The world of data science is progressing quickly.. you’ll fall behind quickly if you stop learning.&lt;/p&gt;
&lt;p&gt;Note how I &lt;strong&gt;didn’t&lt;/strong&gt; simply say “always be learning.” That is not enough. I believe that most people, when learning, spend most of their time non-optimally. An extreme example of this is trying to learn English by reading a dictionary from cover to cover (I actually met someone who had been doing this for years and was strangely proud of knowing all words that start with “A” …)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Learn useful things.&lt;/strong&gt; Considering a new programming language? a new library for creating charts? A new machine learning framework? Before starting, carefully estimate the long-term usefulness of acquiring the skill. For example, popularity is one thing to consider. You can guess that Tensorflow will be a useful skill to have even just by checking simple metrics such as the trend of Github repo stars and Google searches for “Tensorflow.” You can also look at &lt;a href="https://www.jetbrains.com/research/python-developers-survey-2018/"&gt;surveys of programmers&lt;/a&gt; / data scientists, &lt;a href="https://www.quora.com/What-are-the-skills-required-to-become-a-Data-Scientist"&gt;find or ask questions on Quora&lt;/a&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learn things efficiently.&lt;/strong&gt; Think of 100 students sitting in a classroom. The lecture may be too easy / slow for 70 of the students, too difficult / fast for 25 of the students, and just right for 5 of the students. You can customize the learning difficulty and speed/frequency in a way that’s optimal for yourself. (E.g. watch MOOC lecture videos at 1.5x speed, skip through materials in books that you already know, etc.) When learning, you should constantly feel slightly/somewhat challenged and forced to think, but not overwhelmed. Also, refer to study hacks for efficiency such as &lt;a href="https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13/#f8bf"&gt;spaced repetition&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, sometimes it’s fun to learn something obscure or useless… just because it’s interesting. That’s great for having a fun life. But this article is about being an awesome data scientist :)&lt;/p&gt;
&lt;h1&gt;Tip #2: Proactively challenge yourself&lt;/h1&gt;
&lt;p&gt;This actually overlaps with tip #1, but it’s important to emphasize.&lt;/p&gt;
&lt;p&gt;It’s easy to fall into a cycle of doing similar things over and over at work — things which feel less and less challenging.&lt;/p&gt;
&lt;p&gt;no challenge → no growth&lt;/p&gt;
&lt;p&gt;Building a bar chart of revenue for the 50th time? Determining statistical significance of an A/B test of button colors yet again? If you go through a full week in which everything you did was “been there, done that”… &lt;strong&gt;you need to change something&lt;/strong&gt;. There are many ways you can do so:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Try a different (hopefully better) way of doing things&lt;/strong&gt;. Can you automate more of your work or produce a better result? Instead of typing the same date filter repeatedly in 4 subqueries of your SQL query, why not instead develop a way to templatize the SQL query so that you only have to type the date once? Instead of static image charts, can you generate interactive charts using a different R/Python library? Of course, you should probably refrain from things that are overkill (e.g. using a deep neural network when simple logistic regression already works very well).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ask or volunteer for more or different responsibilities&lt;/strong&gt;. This could be a project that is ideated and proposed by you. For example, you could ask to work on a different product area, or you could volunteer to create an automated A/B test analysis tool. You could even volunteer to give a tech talk to practice your public speaking skills, even if your company doesn’t have a culture of holding tech talks. You could also ask your colleagues/boss for ideas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Change teams (or even companies)&lt;/strong&gt;. Hey, no hard feelings. If you’re not able to find enough challenges in your current team despite trying hard to do so, it’s time to move on. There are tons of interesting opportunities out there. You can still keep in touch with your former teammates and grab a drink with them occasionally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Tip #3: Focus on impact early on&lt;/h1&gt;
&lt;p&gt;It’s common for great work to be done but not have an &lt;strong&gt;impact&lt;/strong&gt;. This can lead to demotivation and lack of promotions. Some typical scenarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You showed in a Jupyter notebook that you can develop a model to predict user churn with high accuracy; however, the model was never deployed to production&lt;/li&gt;
&lt;li&gt;Some dude asks you to pull some data. You pull the data. The dude says “ah, interesting...” End of story.&lt;/li&gt;
&lt;li&gt;You estimated that an additional 50,000 users could be acquired with no extra budget if the marketing team changes how they allocate TV ad budget to time slots. The ultimate decision maker says the allocation has “already been finalized.”&lt;/li&gt;
&lt;li&gt;If a tree falls in the forest and no one is around to hear it, does it make a sound? If you created a dashboard and no one looks at it….&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To prevent situations like the above, before you commit to doing any major piece of work, ask yourself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What &lt;strong&gt;ultimate impact on the company&lt;/strong&gt; do you expect from doing this piece of work? Is the impact-to-work ratio higher than other potential tasks?&lt;/li&gt;
&lt;li&gt;What are the &lt;strong&gt;mechanisms/requirements&lt;/strong&gt; for enabling the impact? Often this involves checking for &lt;strong&gt;actionability&lt;/strong&gt;, i.e. if a human needs to take action to enable the impact, get that human’s agreement before you start the work. I.e. ask them “if my analysis indicates X, then based on that, will you probably do Y?”&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Tip #4: Have pride in both technical skills and business understanding&lt;/h1&gt;
&lt;p&gt;I think almost all data scientists understand that technical skills are important: programming, statistics, cloud computing, etc. But sometimes I feel there is not enough appreciation for &lt;strong&gt;deeply understanding the product or business&lt;/strong&gt; for which data science is being applied&lt;strong&gt;.&lt;/strong&gt; Things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is the strategic positioning of your product on your market vs. competitors?&lt;/li&gt;
&lt;li&gt;What is the thought process of customers (who are humans, not just &lt;code&gt;user_id&lt;/code&gt;s) when they decide to spend money on your product?&lt;/li&gt;
&lt;li&gt;How does the overall ecosystem work? For example, if your product is an online news aggregator, how do advertisers, publishers, tech platforms, and users depend on and affect each other? How do the power dynamics work? For a good example of someone who really understands tech ecosystems, see &lt;a href="https://www.ben-evans.com/archive"&gt;Ben Evan’s newsletter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s easy to get bogged down just looking at data, which are in a way abstractions of your customers, partners, etc. But to really have a big impact, you often have to tie the data to the real world in the right way. That’s hard to do, but it’s much easier if you have the right understanding.&lt;/p&gt;
&lt;p&gt;I’ve seen many resumes that are just a laundry list of data science techniques and tools which have almost no mention of the product/business implications of their work. This tells me the person doesn’t fully appreciate such implications.&lt;/p&gt;
&lt;h1&gt;Tip #5: Communication: think hard about how to convey insights and ideas&lt;/h1&gt;
&lt;p&gt;I considered simply writing “communicate better,” but that’s a no-brainer. Who wouldn’t want to be a better communicator? Communication is a natural challenge for many people, but I think huge improvement can be made by simply &lt;strong&gt;taking a bit of time to think&lt;/strong&gt; about it.&lt;/p&gt;
&lt;p&gt;If you’re not sure where to start, you can start with improving your written communication — which is easier since you have more time to think — and then move on to improving verbal communication. Data scientists’ communication includes &lt;a href="http://www.storytellingwithdata.com/"&gt;not only words but also charts and diagrams&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Many people don’t really &lt;strong&gt;reflect&lt;/strong&gt; much on their own communication. They don’t stop to think before they type a message on Slack or take another look aftering posting the message to make sure it conveys their point clearly.&lt;/p&gt;
&lt;p&gt;lack of reflection → lack of improvement&lt;/p&gt;
&lt;p&gt;Improving communication could be as simple as asking yourself a checklist of questions such as this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Did you write things in a logical order? You could write things in order of importance or in chronological order.&lt;/li&gt;
&lt;li&gt;Who are the intended audiences? Is your message / e-mail / blog post customized for such audiences? Will the audience understand the main point you’re trying to make within 10 seconds of starting to read? (this is especially important if your audience is busy executives)&lt;/li&gt;
&lt;li&gt;Are you using too much technical jargon or acronyms which some people might not understand?&lt;/li&gt;
&lt;li&gt;Is your message ambiguous? This is especially a common problem when talking about metrics. Is it insufficient to simply say “revenue” if there are multiple definitions of revenue? If you made a chart, is it easy to interpret and get the key takeaway from it?&lt;/li&gt;
&lt;li&gt;Should you highlight or &lt;strong&gt;put in bold&lt;/strong&gt; especially important points? (especially useful if there’s a lot of text)&lt;/li&gt;
&lt;li&gt;Instead of a wall of text, should you use a diagram to summarize the situation?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also proactively ask others for feedback on your communication. I’d also like to welcome you to give feedback to me on this Medium post :)&lt;/p&gt;
&lt;p&gt;After you get better at communication via deliberate thinking, it’ll become more natural and automatic for you.&lt;/p&gt;
&lt;h1&gt;Up next&lt;/h1&gt;
&lt;p&gt;[Update 2019 Mar 19] I wrote a post called “&lt;a href="https://medium.com/@peacej2/how-to-be-an-awesome-data-science-manager-1c63b059a03c"&gt;How to be an awesome data science manager&lt;/a&gt;.”&lt;/p&gt;</content><category term="Working as a data scientist"></category><category term="data science"></category><category term="communication"></category><category term="teamwork"></category></entry></feed>